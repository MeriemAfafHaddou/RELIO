import streamlit as st

st.logo("images/logo.png")
st.set_page_config(
   page_title="Relio - Documentation",
   page_icon="images/icon.png",
   layout="wide",
   initial_sidebar_state="expanded",
)
st.write(""" # üìë RELIO - Documentation \n
         """)
st.markdown(""" """)
relio_container = st.container(border=True)
relio_container.write(""" 
### :question: Qu'est-ce que ReliO ?
ReliO (RELIable Outcomes) est un API caract√©ris√© par :red-background[**ses r√©sultats fiables**] pour la :red-background[**d√©tection de concept drift**] bas√©e sur le :red-background[**transport optimal**]. Il permet de d√©tecter le concept drift caus√© par le changement de distribution dans les flux de donn√©es en temps r√©el.
""")
st.markdown(""" """)

ot_container = st.container(border=True)
ot_container.write("""
### :question: Qu'est-ce que le transport optimal?
Le Transport Optimal est une m√©thode math√©matique qui permet de trouver la meilleure correspondance entre deux distributions de probabilit√©. Il offre des m√©triques fiable pour comparer les distributions de donn√©es.
                  """)
st.markdown(""" """)


param_container = st.container(border=True)
param_container.write("""
#### :gear: Param√®tres de la simulation """)
param_container.markdown("""
    :small_red_triangle_down: **Taille de la fenetre** : c'est le :red-background[nombre de donn√©es] √† consid√©rer pour le calcul de la m√©trique de drift. \n
    :small_red_triangle_down: **M√©trique de la d√©tection** : c'est la m√©trique bas√©e sur le transport optimal pour :red-background[comparer les distributions] de donn√©es afin de d√©tecter le drift, en :red-background[quantifiant le cout minimal pour transporter une distribution √† une autre]. \n
    :small_red_triangle_down: **Fonction de co√ªt** : c'est une :red-background[distance calcul√©e entre les paires de donn√©es] de deux distibutions, utilis√©e par les m√©triques du transport optimal. On trouve : la distance euclidienne et sa version standaris√©e, et la distance de Mahalanobis. \n
    :small_red_triangle_down: **Pourcentage d'alerte** : c'est le :red-background[pourcentage de changement de distribution] √† partir duquel une alerte est d√©clench√©e. Autrement dit, si la metrique de comparaison augmente de 20% alors une alerte est d√©clench√©e. \n
    :small_red_triangle_down: **Pourcentage de d√©tection** : c'est le :red-background[pourcentage de changement de distribution] √† partir duquel le drift est d√©tect√©. Autrement dit, si la metrique de comparaison augmente de 50% alors le drift est d√©tect√©. \n
    :small_red_triangle_down: **Seuil de stabilit√©** : C'est :red-background[le nombre de fenetre] pour dire que les donn√©es sont :red-background[stables sur une distribution], autrement dit : absence de drift \n
""")
param_container.markdown(""" """)